[{"id":"b2634e71.573e3","type":"tcp in","z":"a54a2528.803328","name":"","server":"client","host":"localhost","port":"60001","datamode":"stream","datatype":"buffer","newline":"~E","topic":"","base64":false,"x":144,"y":202,"wires":[["211999fd.d0d64e"]]},{"id":"567b9555.59c634","type":"debug","z":"a54a2528.803328","name":"","active":true,"console":"true","complete":"payload","x":768.9999389648438,"y":201,"wires":[]},{"id":"211999fd.d0d64e","type":"function","z":"a54a2528.803328","name":"SerialParser","func":"//parser for serial messages\n// based on code previously available on the virtual machine\nvar PAYLOAD_BYTES = 6;\nvar tinyos_payload;\nvar ready = false;\n\n//initialize context if not ready\ncontext.bytes_received = context.bytes_received || 0;\ncontext.bytes_array = context.bytes_array || [];\n\n//update count of bytes received\nvar bytes_received = msg.payload.length;\ncontext.bytes_received+=bytes_received;\n\n//copy received bytes in context\nfor(var i=0;i<msg.payload.length;i++){\n\tcontext.bytes_array.push(msg.payload[i]);\n}\n\n//create TinyOS payload if correct number of bytes is received\nif(context.bytes_received >= 13 + PAYLOAD_BYTES){\n\t\n\tmsg.payload = context.bytes_array;\n\ttinyos_payload = context.bytes_array.slice(10,-3);\n\n\tcontext.bytes_received = 0;\n\tcontext.bytes_array = [];\n\n\t//GET THE PAYLOAD (HEX FORMAT)\n\tvar byte_payload = new Buffer(tinyos_payload.length);\n\tfor(var i=0;i<tinyos_payload.length;i++){\n\t\tbyte_payload[i] = tinyos_payload[i];\n\t}\n\t    msg.payload = {};\n\t\tmsg.payload.id=byte_payload.readUInt16BE(0,2);\n\t\tmsg.payload.value=byte_payload.readUInt16BE(2,4);\n\t\tmsg.payload.sender=byte_payload.readUInt16BE(4,6);\n\t\tmsg.topic = \"FakeSensor\"\n\treturn msg;\t\n}\nelse{\n\treturn null;\n}\n","outputs":"1","noerr":0,"x":459.25,"y":201,"wires":[["567b9555.59c634"]]}]
